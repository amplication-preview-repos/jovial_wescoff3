/*
------------------------------------------------------------------------------ 
This code was generated by Amplication. 
 
Changes to this file will be lost if the code is regenerated. 

There are other ways to to customize your code, see this doc to learn more
https://docs.amplication.com/how-to/custom-code

------------------------------------------------------------------------------
  */
import { PrismaService } from "../../prisma/prisma.service";
import { Prisma, Operatore5 as PrismaOperatore5 } from "@prisma/client";

export class Operatore5ServiceBase {
  constructor(protected readonly prisma: PrismaService) {}

  async count(
    args: Omit<Prisma.Operatore5CountArgs, "select">
  ): Promise<number> {
    return this.prisma.operatore5.count(args);
  }

  async operatore5s(
    args: Prisma.Operatore5FindManyArgs
  ): Promise<PrismaOperatore5[]> {
    return this.prisma.operatore5.findMany(args);
  }
  async operatore5(
    args: Prisma.Operatore5FindUniqueArgs
  ): Promise<PrismaOperatore5 | null> {
    return this.prisma.operatore5.findUnique(args);
  }
  async createOperatore5(
    args: Prisma.Operatore5CreateArgs
  ): Promise<PrismaOperatore5> {
    return this.prisma.operatore5.create(args);
  }
  async updateOperatore5(
    args: Prisma.Operatore5UpdateArgs
  ): Promise<PrismaOperatore5> {
    return this.prisma.operatore5.update(args);
  }
  async deleteOperatore5(
    args: Prisma.Operatore5DeleteArgs
  ): Promise<PrismaOperatore5> {
    return this.prisma.operatore5.delete(args);
  }
}
