/*
------------------------------------------------------------------------------ 
This code was generated by Amplication. 
 
Changes to this file will be lost if the code is regenerated. 

There are other ways to to customize your code, see this doc to learn more
https://docs.amplication.com/how-to/custom-code

------------------------------------------------------------------------------
  */
import { PrismaService } from "../../prisma/prisma.service";
import { Prisma, Operatore23 as PrismaOperatore23 } from "@prisma/client";

export class Operatore23ServiceBase {
  constructor(protected readonly prisma: PrismaService) {}

  async count(
    args: Omit<Prisma.Operatore23CountArgs, "select">
  ): Promise<number> {
    return this.prisma.operatore23.count(args);
  }

  async operatore23s(
    args: Prisma.Operatore23FindManyArgs
  ): Promise<PrismaOperatore23[]> {
    return this.prisma.operatore23.findMany(args);
  }
  async operatore23(
    args: Prisma.Operatore23FindUniqueArgs
  ): Promise<PrismaOperatore23 | null> {
    return this.prisma.operatore23.findUnique(args);
  }
  async createOperatore23(
    args: Prisma.Operatore23CreateArgs
  ): Promise<PrismaOperatore23> {
    return this.prisma.operatore23.create(args);
  }
  async updateOperatore23(
    args: Prisma.Operatore23UpdateArgs
  ): Promise<PrismaOperatore23> {
    return this.prisma.operatore23.update(args);
  }
  async deleteOperatore23(
    args: Prisma.Operatore23DeleteArgs
  ): Promise<PrismaOperatore23> {
    return this.prisma.operatore23.delete(args);
  }
}
