/*
------------------------------------------------------------------------------ 
This code was generated by Amplication. 
 
Changes to this file will be lost if the code is regenerated. 

There are other ways to to customize your code, see this doc to learn more
https://docs.amplication.com/how-to/custom-code

------------------------------------------------------------------------------
  */
import { PrismaService } from "../../prisma/prisma.service";
import { Prisma, Operatore2 as PrismaOperatore2 } from "@prisma/client";

export class Operatore2ServiceBase {
  constructor(protected readonly prisma: PrismaService) {}

  async count(
    args: Omit<Prisma.Operatore2CountArgs, "select">
  ): Promise<number> {
    return this.prisma.operatore2.count(args);
  }

  async operatore2s(
    args: Prisma.Operatore2FindManyArgs
  ): Promise<PrismaOperatore2[]> {
    return this.prisma.operatore2.findMany(args);
  }
  async operatore2(
    args: Prisma.Operatore2FindUniqueArgs
  ): Promise<PrismaOperatore2 | null> {
    return this.prisma.operatore2.findUnique(args);
  }
  async createOperatore2(
    args: Prisma.Operatore2CreateArgs
  ): Promise<PrismaOperatore2> {
    return this.prisma.operatore2.create(args);
  }
  async updateOperatore2(
    args: Prisma.Operatore2UpdateArgs
  ): Promise<PrismaOperatore2> {
    return this.prisma.operatore2.update(args);
  }
  async deleteOperatore2(
    args: Prisma.Operatore2DeleteArgs
  ): Promise<PrismaOperatore2> {
    return this.prisma.operatore2.delete(args);
  }
}
