/*
------------------------------------------------------------------------------ 
This code was generated by Amplication. 
 
Changes to this file will be lost if the code is regenerated. 

There are other ways to to customize your code, see this doc to learn more
https://docs.amplication.com/how-to/custom-code

------------------------------------------------------------------------------
  */
import { PrismaService } from "../../prisma/prisma.service";
import { Prisma, Operatore21 as PrismaOperatore21 } from "@prisma/client";

export class Operatore21ServiceBase {
  constructor(protected readonly prisma: PrismaService) {}

  async count(
    args: Omit<Prisma.Operatore21CountArgs, "select">
  ): Promise<number> {
    return this.prisma.operatore21.count(args);
  }

  async operatore21s(
    args: Prisma.Operatore21FindManyArgs
  ): Promise<PrismaOperatore21[]> {
    return this.prisma.operatore21.findMany(args);
  }
  async operatore21(
    args: Prisma.Operatore21FindUniqueArgs
  ): Promise<PrismaOperatore21 | null> {
    return this.prisma.operatore21.findUnique(args);
  }
  async createOperatore21(
    args: Prisma.Operatore21CreateArgs
  ): Promise<PrismaOperatore21> {
    return this.prisma.operatore21.create(args);
  }
  async updateOperatore21(
    args: Prisma.Operatore21UpdateArgs
  ): Promise<PrismaOperatore21> {
    return this.prisma.operatore21.update(args);
  }
  async deleteOperatore21(
    args: Prisma.Operatore21DeleteArgs
  ): Promise<PrismaOperatore21> {
    return this.prisma.operatore21.delete(args);
  }
}
