/*
------------------------------------------------------------------------------ 
This code was generated by Amplication. 
 
Changes to this file will be lost if the code is regenerated. 

There are other ways to to customize your code, see this doc to learn more
https://docs.amplication.com/how-to/custom-code

------------------------------------------------------------------------------
  */
import { PrismaService } from "../../prisma/prisma.service";
import { Prisma, Operatore24 as PrismaOperatore24 } from "@prisma/client";

export class Operatore24ServiceBase {
  constructor(protected readonly prisma: PrismaService) {}

  async count(
    args: Omit<Prisma.Operatore24CountArgs, "select">
  ): Promise<number> {
    return this.prisma.operatore24.count(args);
  }

  async operatore24s(
    args: Prisma.Operatore24FindManyArgs
  ): Promise<PrismaOperatore24[]> {
    return this.prisma.operatore24.findMany(args);
  }
  async operatore24(
    args: Prisma.Operatore24FindUniqueArgs
  ): Promise<PrismaOperatore24 | null> {
    return this.prisma.operatore24.findUnique(args);
  }
  async createOperatore24(
    args: Prisma.Operatore24CreateArgs
  ): Promise<PrismaOperatore24> {
    return this.prisma.operatore24.create(args);
  }
  async updateOperatore24(
    args: Prisma.Operatore24UpdateArgs
  ): Promise<PrismaOperatore24> {
    return this.prisma.operatore24.update(args);
  }
  async deleteOperatore24(
    args: Prisma.Operatore24DeleteArgs
  ): Promise<PrismaOperatore24> {
    return this.prisma.operatore24.delete(args);
  }
}
