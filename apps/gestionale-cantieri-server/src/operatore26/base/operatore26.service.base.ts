/*
------------------------------------------------------------------------------ 
This code was generated by Amplication. 
 
Changes to this file will be lost if the code is regenerated. 

There are other ways to to customize your code, see this doc to learn more
https://docs.amplication.com/how-to/custom-code

------------------------------------------------------------------------------
  */
import { PrismaService } from "../../prisma/prisma.service";
import { Prisma, Operatore26 as PrismaOperatore26 } from "@prisma/client";

export class Operatore26ServiceBase {
  constructor(protected readonly prisma: PrismaService) {}

  async count(
    args: Omit<Prisma.Operatore26CountArgs, "select">
  ): Promise<number> {
    return this.prisma.operatore26.count(args);
  }

  async operatore26s(
    args: Prisma.Operatore26FindManyArgs
  ): Promise<PrismaOperatore26[]> {
    return this.prisma.operatore26.findMany(args);
  }
  async operatore26(
    args: Prisma.Operatore26FindUniqueArgs
  ): Promise<PrismaOperatore26 | null> {
    return this.prisma.operatore26.findUnique(args);
  }
  async createOperatore26(
    args: Prisma.Operatore26CreateArgs
  ): Promise<PrismaOperatore26> {
    return this.prisma.operatore26.create(args);
  }
  async updateOperatore26(
    args: Prisma.Operatore26UpdateArgs
  ): Promise<PrismaOperatore26> {
    return this.prisma.operatore26.update(args);
  }
  async deleteOperatore26(
    args: Prisma.Operatore26DeleteArgs
  ): Promise<PrismaOperatore26> {
    return this.prisma.operatore26.delete(args);
  }
}
