/*
------------------------------------------------------------------------------ 
This code was generated by Amplication. 
 
Changes to this file will be lost if the code is regenerated. 

There are other ways to to customize your code, see this doc to learn more
https://docs.amplication.com/how-to/custom-code

------------------------------------------------------------------------------
  */
import * as graphql from "@nestjs/graphql";
import { GraphQLError } from "graphql";
import { isRecordNotFoundError } from "../../prisma.util";
import { MetaQueryPayload } from "../../util/MetaQueryPayload";
import { Operatore26 } from "./Operatore26";
import { Operatore26CountArgs } from "./Operatore26CountArgs";
import { Operatore26FindManyArgs } from "./Operatore26FindManyArgs";
import { Operatore26FindUniqueArgs } from "./Operatore26FindUniqueArgs";
import { CreateOperatore26Args } from "./CreateOperatore26Args";
import { UpdateOperatore26Args } from "./UpdateOperatore26Args";
import { DeleteOperatore26Args } from "./DeleteOperatore26Args";
import { Operatore26Service } from "../operatore26.service";
@graphql.Resolver(() => Operatore26)
export class Operatore26ResolverBase {
  constructor(protected readonly service: Operatore26Service) {}

  async _operatore26sMeta(
    @graphql.Args() args: Operatore26CountArgs
  ): Promise<MetaQueryPayload> {
    const result = await this.service.count(args);
    return {
      count: result,
    };
  }

  @graphql.Query(() => [Operatore26])
  async operatore26s(
    @graphql.Args() args: Operatore26FindManyArgs
  ): Promise<Operatore26[]> {
    return this.service.operatore26s(args);
  }

  @graphql.Query(() => Operatore26, { nullable: true })
  async operatore26(
    @graphql.Args() args: Operatore26FindUniqueArgs
  ): Promise<Operatore26 | null> {
    const result = await this.service.operatore26(args);
    if (result === null) {
      return null;
    }
    return result;
  }

  @graphql.Mutation(() => Operatore26)
  async createOperatore26(
    @graphql.Args() args: CreateOperatore26Args
  ): Promise<Operatore26> {
    return await this.service.createOperatore26({
      ...args,
      data: args.data,
    });
  }

  @graphql.Mutation(() => Operatore26)
  async updateOperatore26(
    @graphql.Args() args: UpdateOperatore26Args
  ): Promise<Operatore26 | null> {
    try {
      return await this.service.updateOperatore26({
        ...args,
        data: args.data,
      });
    } catch (error) {
      if (isRecordNotFoundError(error)) {
        throw new GraphQLError(
          `No resource was found for ${JSON.stringify(args.where)}`
        );
      }
      throw error;
    }
  }

  @graphql.Mutation(() => Operatore26)
  async deleteOperatore26(
    @graphql.Args() args: DeleteOperatore26Args
  ): Promise<Operatore26 | null> {
    try {
      return await this.service.deleteOperatore26(args);
    } catch (error) {
      if (isRecordNotFoundError(error)) {
        throw new GraphQLError(
          `No resource was found for ${JSON.stringify(args.where)}`
        );
      }
      throw error;
    }
  }
}
