/*
------------------------------------------------------------------------------ 
This code was generated by Amplication. 
 
Changes to this file will be lost if the code is regenerated. 

There are other ways to to customize your code, see this doc to learn more
https://docs.amplication.com/how-to/custom-code

------------------------------------------------------------------------------
  */
import { PrismaService } from "../../prisma/prisma.service";
import { Prisma, Cantieri as PrismaCantieri } from "@prisma/client";

export class CantieriServiceBase {
  constructor(protected readonly prisma: PrismaService) {}

  async count(args: Omit<Prisma.CantieriCountArgs, "select">): Promise<number> {
    return this.prisma.cantieri.count(args);
  }

  async cantieris(
    args: Prisma.CantieriFindManyArgs
  ): Promise<PrismaCantieri[]> {
    return this.prisma.cantieri.findMany(args);
  }
  async cantieri(
    args: Prisma.CantieriFindUniqueArgs
  ): Promise<PrismaCantieri | null> {
    return this.prisma.cantieri.findUnique(args);
  }
  async createCantieri(
    args: Prisma.CantieriCreateArgs
  ): Promise<PrismaCantieri> {
    return this.prisma.cantieri.create(args);
  }
  async updateCantieri(
    args: Prisma.CantieriUpdateArgs
  ): Promise<PrismaCantieri> {
    return this.prisma.cantieri.update(args);
  }
  async deleteCantieri(
    args: Prisma.CantieriDeleteArgs
  ): Promise<PrismaCantieri> {
    return this.prisma.cantieri.delete(args);
  }
}
