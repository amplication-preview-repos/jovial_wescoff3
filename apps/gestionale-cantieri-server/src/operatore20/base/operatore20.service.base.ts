/*
------------------------------------------------------------------------------ 
This code was generated by Amplication. 
 
Changes to this file will be lost if the code is regenerated. 

There are other ways to to customize your code, see this doc to learn more
https://docs.amplication.com/how-to/custom-code

------------------------------------------------------------------------------
  */
import { PrismaService } from "../../prisma/prisma.service";
import { Prisma, Operatore20 as PrismaOperatore20 } from "@prisma/client";

export class Operatore20ServiceBase {
  constructor(protected readonly prisma: PrismaService) {}

  async count(
    args: Omit<Prisma.Operatore20CountArgs, "select">
  ): Promise<number> {
    return this.prisma.operatore20.count(args);
  }

  async operatore20s(
    args: Prisma.Operatore20FindManyArgs
  ): Promise<PrismaOperatore20[]> {
    return this.prisma.operatore20.findMany(args);
  }
  async operatore20(
    args: Prisma.Operatore20FindUniqueArgs
  ): Promise<PrismaOperatore20 | null> {
    return this.prisma.operatore20.findUnique(args);
  }
  async createOperatore20(
    args: Prisma.Operatore20CreateArgs
  ): Promise<PrismaOperatore20> {
    return this.prisma.operatore20.create(args);
  }
  async updateOperatore20(
    args: Prisma.Operatore20UpdateArgs
  ): Promise<PrismaOperatore20> {
    return this.prisma.operatore20.update(args);
  }
  async deleteOperatore20(
    args: Prisma.Operatore20DeleteArgs
  ): Promise<PrismaOperatore20> {
    return this.prisma.operatore20.delete(args);
  }
}
