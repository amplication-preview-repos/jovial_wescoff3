/*
------------------------------------------------------------------------------ 
This code was generated by Amplication. 
 
Changes to this file will be lost if the code is regenerated. 

There are other ways to to customize your code, see this doc to learn more
https://docs.amplication.com/how-to/custom-code

------------------------------------------------------------------------------
  */
import { PrismaService } from "../../prisma/prisma.service";
import { Prisma, Operatore6 as PrismaOperatore6 } from "@prisma/client";

export class Operatore6ServiceBase {
  constructor(protected readonly prisma: PrismaService) {}

  async count(
    args: Omit<Prisma.Operatore6CountArgs, "select">
  ): Promise<number> {
    return this.prisma.operatore6.count(args);
  }

  async operatore6s(
    args: Prisma.Operatore6FindManyArgs
  ): Promise<PrismaOperatore6[]> {
    return this.prisma.operatore6.findMany(args);
  }
  async operatore6(
    args: Prisma.Operatore6FindUniqueArgs
  ): Promise<PrismaOperatore6 | null> {
    return this.prisma.operatore6.findUnique(args);
  }
  async createOperatore6(
    args: Prisma.Operatore6CreateArgs
  ): Promise<PrismaOperatore6> {
    return this.prisma.operatore6.create(args);
  }
  async updateOperatore6(
    args: Prisma.Operatore6UpdateArgs
  ): Promise<PrismaOperatore6> {
    return this.prisma.operatore6.update(args);
  }
  async deleteOperatore6(
    args: Prisma.Operatore6DeleteArgs
  ): Promise<PrismaOperatore6> {
    return this.prisma.operatore6.delete(args);
  }
}
