/*
------------------------------------------------------------------------------ 
This code was generated by Amplication. 
 
Changes to this file will be lost if the code is regenerated. 

There are other ways to to customize your code, see this doc to learn more
https://docs.amplication.com/how-to/custom-code

------------------------------------------------------------------------------
  */
import { PrismaService } from "../../prisma/prisma.service";
import { Prisma, Enti as PrismaEnti } from "@prisma/client";

export class EntiServiceBase {
  constructor(protected readonly prisma: PrismaService) {}

  async count(args: Omit<Prisma.EntiCountArgs, "select">): Promise<number> {
    return this.prisma.enti.count(args);
  }

  async entis(args: Prisma.EntiFindManyArgs): Promise<PrismaEnti[]> {
    return this.prisma.enti.findMany(args);
  }
  async enti(args: Prisma.EntiFindUniqueArgs): Promise<PrismaEnti | null> {
    return this.prisma.enti.findUnique(args);
  }
  async createEnti(args: Prisma.EntiCreateArgs): Promise<PrismaEnti> {
    return this.prisma.enti.create(args);
  }
  async updateEnti(args: Prisma.EntiUpdateArgs): Promise<PrismaEnti> {
    return this.prisma.enti.update(args);
  }
  async deleteEnti(args: Prisma.EntiDeleteArgs): Promise<PrismaEnti> {
    return this.prisma.enti.delete(args);
  }
}
