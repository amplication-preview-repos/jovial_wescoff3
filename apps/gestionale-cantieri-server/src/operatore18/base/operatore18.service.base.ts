/*
------------------------------------------------------------------------------ 
This code was generated by Amplication. 
 
Changes to this file will be lost if the code is regenerated. 

There are other ways to to customize your code, see this doc to learn more
https://docs.amplication.com/how-to/custom-code

------------------------------------------------------------------------------
  */
import { PrismaService } from "../../prisma/prisma.service";
import { Prisma, Operatore18 as PrismaOperatore18 } from "@prisma/client";

export class Operatore18ServiceBase {
  constructor(protected readonly prisma: PrismaService) {}

  async count(
    args: Omit<Prisma.Operatore18CountArgs, "select">
  ): Promise<number> {
    return this.prisma.operatore18.count(args);
  }

  async operatore18s(
    args: Prisma.Operatore18FindManyArgs
  ): Promise<PrismaOperatore18[]> {
    return this.prisma.operatore18.findMany(args);
  }
  async operatore18(
    args: Prisma.Operatore18FindUniqueArgs
  ): Promise<PrismaOperatore18 | null> {
    return this.prisma.operatore18.findUnique(args);
  }
  async createOperatore18(
    args: Prisma.Operatore18CreateArgs
  ): Promise<PrismaOperatore18> {
    return this.prisma.operatore18.create(args);
  }
  async updateOperatore18(
    args: Prisma.Operatore18UpdateArgs
  ): Promise<PrismaOperatore18> {
    return this.prisma.operatore18.update(args);
  }
  async deleteOperatore18(
    args: Prisma.Operatore18DeleteArgs
  ): Promise<PrismaOperatore18> {
    return this.prisma.operatore18.delete(args);
  }
}
