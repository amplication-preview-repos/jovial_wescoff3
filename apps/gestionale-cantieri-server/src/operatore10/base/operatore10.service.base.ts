/*
------------------------------------------------------------------------------ 
This code was generated by Amplication. 
 
Changes to this file will be lost if the code is regenerated. 

There are other ways to to customize your code, see this doc to learn more
https://docs.amplication.com/how-to/custom-code

------------------------------------------------------------------------------
  */
import { PrismaService } from "../../prisma/prisma.service";
import { Prisma, Operatore10 as PrismaOperatore10 } from "@prisma/client";

export class Operatore10ServiceBase {
  constructor(protected readonly prisma: PrismaService) {}

  async count(
    args: Omit<Prisma.Operatore10CountArgs, "select">
  ): Promise<number> {
    return this.prisma.operatore10.count(args);
  }

  async operatore10s(
    args: Prisma.Operatore10FindManyArgs
  ): Promise<PrismaOperatore10[]> {
    return this.prisma.operatore10.findMany(args);
  }
  async operatore10(
    args: Prisma.Operatore10FindUniqueArgs
  ): Promise<PrismaOperatore10 | null> {
    return this.prisma.operatore10.findUnique(args);
  }
  async createOperatore10(
    args: Prisma.Operatore10CreateArgs
  ): Promise<PrismaOperatore10> {
    return this.prisma.operatore10.create(args);
  }
  async updateOperatore10(
    args: Prisma.Operatore10UpdateArgs
  ): Promise<PrismaOperatore10> {
    return this.prisma.operatore10.update(args);
  }
  async deleteOperatore10(
    args: Prisma.Operatore10DeleteArgs
  ): Promise<PrismaOperatore10> {
    return this.prisma.operatore10.delete(args);
  }
}
