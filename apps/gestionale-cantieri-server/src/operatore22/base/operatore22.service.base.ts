/*
------------------------------------------------------------------------------ 
This code was generated by Amplication. 
 
Changes to this file will be lost if the code is regenerated. 

There are other ways to to customize your code, see this doc to learn more
https://docs.amplication.com/how-to/custom-code

------------------------------------------------------------------------------
  */
import { PrismaService } from "../../prisma/prisma.service";
import { Prisma, Operatore22 as PrismaOperatore22 } from "@prisma/client";

export class Operatore22ServiceBase {
  constructor(protected readonly prisma: PrismaService) {}

  async count(
    args: Omit<Prisma.Operatore22CountArgs, "select">
  ): Promise<number> {
    return this.prisma.operatore22.count(args);
  }

  async operatore22s(
    args: Prisma.Operatore22FindManyArgs
  ): Promise<PrismaOperatore22[]> {
    return this.prisma.operatore22.findMany(args);
  }
  async operatore22(
    args: Prisma.Operatore22FindUniqueArgs
  ): Promise<PrismaOperatore22 | null> {
    return this.prisma.operatore22.findUnique(args);
  }
  async createOperatore22(
    args: Prisma.Operatore22CreateArgs
  ): Promise<PrismaOperatore22> {
    return this.prisma.operatore22.create(args);
  }
  async updateOperatore22(
    args: Prisma.Operatore22UpdateArgs
  ): Promise<PrismaOperatore22> {
    return this.prisma.operatore22.update(args);
  }
  async deleteOperatore22(
    args: Prisma.Operatore22DeleteArgs
  ): Promise<PrismaOperatore22> {
    return this.prisma.operatore22.delete(args);
  }
}
